name: Build, test and publish NuGet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: src
      run: dotnet restore
    - name: Build
      working-directory: src
      run: dotnet build --no-restore
    - name: Test
      working-directory: src
      run: dotnet test --no-build --verbosity normal

#    - name: Get version
#      uses: dotnet/nbgv@master
#      id: nbgv
#    - run: echo 'SemVer2=${{ steps.nbgv.outputs.SemVer2 }}'

    # Publish
    - name: publish on version change
      id: publish_nuget
      uses: tedd/publish-nuget-neo@v1
      with:
        # NuGet API key to authenticate on NuGet server.
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

        # Full path to project file. (Example: src/MyNuGetProject/MyNuGetProject.csproj) (Default: Will scan all .csproj/.fsproj/.vbproj files and use first it finds that has GeneratePackageOnBuild set to true.)
        #PROJECT_FILE_PATH:

        # URL to NuGet server. (Default: https://api.nuget.org)
        #NUGET_SOURCE: https://api.nuget.org

        # Add symbols to NuGet package. (Default: false)
        INCLUDE_SYMBOLS: true
        
        # Current Git commit should be tagged upon successful upload to NuGet. (Default: false)
        TAG_COMMIT: true
        
        # Name of Git tag. * will be replaced by version number. (Default: v*)
        #TAG_FORMAT: v*

        # NuGet package name. This is used for checking NuGet server if package version already exists. (Default: name extracted from PROJECT_FILE_PATH)
        # PACKAGE_NAME:

        # Path to file containing version number to extract using regex. (Default: $PROJECT_FILE_PATH)
        # VERSION_FILE_PATH:

        # Regex pattern to extract version info in a capturing group. (Default: ^\\s*<Version>(.*)<\\/Version>\\s*$)
        # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$

        # Useful with external providers like Nerdbank.GitVersioning where you could for example set it to variable (dollar){{env.GitBuildVersionSimple}}. Ignores VERSION_FILE_PATH & VERSION_REGEX.
        #VERSION_STATIC: ${{env.GitBuildVersionSimple}}
        
        # Rebuild project in release mode? You may turn this off if you have built project in previous step. (default: true)
        #REBUILD_PROJECT: true
        
        # Log level (DEBUG, INFO, WARN). (default: DEBUG)
        #LOG_LEVEL: DEBUG
